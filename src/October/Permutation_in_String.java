package October;

import java.util.HashMap;
import java.util.Map;

/*
Given two strings s1 and s2, return true if s2 contains a
permutation
 of s1, or false otherwise.

In other words, return true if one of s1's permutations is the substring of s2.



Example 1:

Input: s1 = "ab", s2 = "eidbaooo"
Output: true
Explanation: s2 contains one permutation of s1 ("ba").
Example 2:

Input: s1 = "ab", s2 = "eidboaoo"
Output: false


Constraints:

1 <= s1.length, s2.length <= 104
s1 and s2 consist of lowercase English letters.
 */
public class Permutation_in_String {
    public boolean checkInclusion(String s1, String s2) {
        System.out.println("s1: " + s1 + "\ts2: " + s2);
        if (s1.length() > s2.length()) return false;

        Map<Character, Integer> m1 = new HashMap<>();
        for (int i = 0; i < s1.length(); i++) {
            char ch = s1.charAt(i);
            m1.put(ch, m1.getOrDefault(ch, 0) + 1);
        }

        Map<Character, Integer> m2 = new HashMap<>();

        int n = s1.length();
        for (int i = 0; i < s2.length(); i++) {
            char ch = s2.charAt(i);
            m2.put(ch, m2.getOrDefault(ch, 0) + 1);

            if (i >= n) {
                char charToRemove = s2.charAt(i - n);
                if (m2.get(charToRemove) == 1) {
                    m2.remove(charToRemove);
                } else {
                    m2.put(charToRemove, m2.get(charToRemove) - 1);
                }
            }

            if (m1.equals(m2)) {
                return true;
            }

        }
        return false;

    }

    public void driver() {
        String[] strings = {"adc", "dcda", "bc", "ad", "abc", "defabc", "cgzvjlgigiosbizrtoyxexeijhqzzgbwxnmyhmanpaagjblooflawusyjiayocqhpxkybgkkybkostijmntcaxpjrfrvirvwdvlcrnrdsceldnhihrftexsdykkzcbelecdjhnwfuvnwwyxvowugdhpxfbigotfajpitxuvvcmbiipjzctrrlyxswgcvkaklfkocmathfdsgddmtstzqedazztmutaqgyiywsufcgejubzsuwcawpxwwdnzfvkpbdjuvhkrifzdtzpssbvqetzejjpdfzxczfnfoucfkvyspmpscpljmchrsfdtfcyvhfyqiaxfqdmewxtwavbxreeogxeelvrashuelrkrmxmdxriayxfmhfmxelwbydycfornyqpuhjrbgbukotgtgbtlnqljjxktnysnayiutkxuzdimbaocjymgledptwavfhlnauiafqiaoyngspnmttcxkgzufpvfvfulclgqekmehwqmfqtcrtvkfnjifrhmrsbcixlopgxkrgwnqjdhrftrwqmnfgjhwmbbmbnuawyjliarjgafybqvcigmpiyqguiwzvthtwqjvwmgfxvfwcyxizavpwwwuoqzhjyjxnjxyzpdmajxtckzdkklipdldzobgjnhyrcexggtjbilqrnfgvmtwrvhxsuysxyuumnxaucvkuafpbegihgcsuhfqqljrxrquaqpjmsegzisqogtvxcqfhnrxedovyjgyknqlfmdlpfbcyfrdokvlzlgbsnajwgnybmutvljqwovppctbadmkmujpwnggqbrcqmjbdaodixjsozzrmgoycpfkhwomujbuxqdyjmrqbchhfpwgbigboxseknxdptgoejsgewykoszssnnwaocaodqsghprzqbtnfosgotvdwxzwhjdlqhlwgidlrdudgwkgrtzdxjlhbkdjkjxjvmkvdimdeejvsmqjkagffrfsdspstowzcablbtcbpdovfinpyatkgcrzotmtztiyqnxycsawmdpfdeubekhzktgnqabfhqkfrszwpaylarurklzrfjeruqpjhhjibojcovcbccbscgwwjkixhufvbmrbbcbjiaxhhryqgbbpbzwbbbyxukrervckfislgwunqbyzandfqlsturgrssnzneqtgbsrfugstirqholqmftjacnqapjdxzrcpqfnkiuaqeyawhobemdnkshevtkywueowgekedmjdledcddtoomnkkzgvyqbonynqlakhcxynsfoxjlkevqscltkyroiiymzcxvmvhtojspzwezdxabuxuhhrgeynczmnujzglzhgywtpbyygwvazmqbcnlbjwcyzkurnsrvuxltsymrvoonasiquqvtgcffaphsfklonlsdvrmmobdafchuyntcciugpfgkuszgwrcfkbpfztiwpcczlnjoabxvtkldmtyjlbhorvhiuvzqidypyzwxqjefdhztbgcunthxzimaszfvzzfbnydxsmnplqgtrkcbadmvbqlonrxdgxpunwptatdvgxnybmviiwdrkcplezholphdenmvywilaqfujnmbeydvovytlmzpjalkekwbljwvrmemfcthyickamqdszdglrsapjjhehbiqoxhgynfyypljxhpfjxlckfxvhetcylewtnbhvgvhbpsmftgzsrzawwcunjdarwdgsqrihyshnraiizbsavcdqmjvezehjjgaxnmffdtapkzbhimygljaimqncsrynjzvkdcenndicaxnorrcbhvkgrouchpzqxtchmqabktglnjbpxhuroxjxskfppkyzbsvkenecglzbgvkxdpkjoykcsobkjnzwhbyycvkxwdwqbfzjeoakbadlaekmqgdxbojwpvkftckuparzpeyytdowcxrupeoidlirdqseqhkpfxcvfuuyqybgosfppscdtwetliojdztckjarmlkmtpuhqfhshdwummaphq", "vnndchsddonunovgxxlrrdtnfjidmocdrdcnousrajalpsgvxolzhujffwszxhqhojtmdluwdrzwqwqvbebztgghadtdroxujmzwmftiwamymwmpysqwffjuxtdebqoglbqobxfixdlircftggnezxyxrjzytffudihaespkhdpeqnalqohjqtypsobhrxtovxskqvtdqulgaeozlxazpubdveorkytajakzagxmhrlcvfwyuteboazjnecgrggpmmxplndhbvkhmkaozlqpgxenkchjjtaegwfcbquxlsldlbxzyfwahdpybheugrysnbjizbpgpwzwfdnriscqlrndkvibkqczjbiwkahypuujuexwtbtiqpnixwcslojlowxxjhpxvmxssciyhxpbmfpoeiizuhlkswctwkzguwyvyqvtemnerodalfuocyaduvyjwcgyxtcdhggskcdazjsqnowkkklmnocgrjpgrwdwjbhvvwtgfuialbafnycigyhnphhvnibinvadcoprwdnreuwukosnlatsymuqxtgdvsrvmercfpfaaeszkhknurpqxhyyxclzvzjqkztoqrpszcmhbcdvxwbdokmflzcsepejdemzvtzhtkmhhjhducxxijvgjidjaemzwkeyggircxivxyxcogasotyfnuamfavpkcjbnvxddhyiiybwkqobmzuzmegdiqvzjptiwhujpndvxzlaclqsemhtqwufeonsdjgnbkkjjsyxtpdytfsgpmknjibjyxctwmprbcyjhlfiyaofvjryiicpoaxeonayvztnkvzpoprnbdtwllozlqyedvnezxxxuspenwxjekkgaeajhxriahqcutakhifqkzgcjldlkbxapqrwvwshpyvnbukblgcdyyhikloslaxrsfrkwexzbrndopgnwejltpdiiwykwfymmwtsbjcvtmnakjyeqcbcbdtcuxuueaxzurixojxqdfcsdmfejajqlissfkkowchuyabccuazveqmegrtdnsoqsqxgmilxnyewpkiheajdvcnyjuuuvhonjumnshoinriazaxrqizrkuhyadjmkwdizkuamgseqibgnhgovccxmgtcywroxctticxbmvvqenvmuzdobfcxqffzgcojdhvvvkgajmuelevryxxjcvfbgpztrpzjpmttwjalllbltzmfqiwoodlvnnoviwiotmpjkjwfdnjfcsylhtioszxytvkkhrunwqxuivzukynbrdjryxkivngsecgskxhtpffrvfpwrpcythjbjdjocxcaemznunyhhrvcchmubozsqnfbgwrtzhhaprjkiwwrxzggkamvzdeidbckwyctuspdmfjhhrujobvvzuhhimutzlqfleimwechdemrztldrqwtevkbmttsdxcpmkzogegytvtrwevzbvszsxpohqqndstnstnaltilpeqdixpokcgzvjlgigiosbizrtoyxexeijkqzzgbwxnmyhmanpmagjblooflawusyjiayocqhpxkpbgkkybkostijmntcaxpjrfrvirvwdvlcrnrdsceldnhihrfyexsdykkzcbelecdjhnqcuvnwwyxvowugdhpxfbigotfajpitxuvvcmbiipjzctrrlyxswgcvkahlfkocmathfdsgddmtstzqedazztmutaqgyitwsufcgejufzsuwcawpxwwdnzfvkpbdjuvhkrifzdtzpssbvqetzejjpdfzxczfnfoucfkvyspmpscpljmchrsfdqfcyvhfyqiaxfqdmewxtwavbxreeogxeelvrashuelrkrmxmdxriayxfmhfmxelwbydycfornyqpuhjrbgbukotgtgbtlnqljjxktnysnayiutkxuzdimbsocjyagledptwavfhlnauiafqiaoyngspnmttcxkgzubpvfvfulclgqekmehwqmfqtcrtxkfnjifrhmrsbcixlougxkrgwnqjdhrftrwqmnfgjhwmbbmbnuawyjliarjgafylqvcigmpiyqguiwzvthtwqjvwmgfxvfwcyvizavpwwwuoqzhjyjxnjxyzpdmajxtckzdkklipdldzobgjnhyrcexggtjbilqrnfgvmtwrvhxsuysxyuumnxaucvkuafpbegihgcsuhfqqljrxrquaqpjmsegzisqogtvxcqfhnrxedovyjgykntlfmdlpfbcyfrdokvlzlgbsnajwgnybmutvljqwovppctbadmkmujpwnggqbrcqmjbdaodixjsozzrmgoyfpfkhwomajbuxqdyjmrqbchhfpwgbigboxseknxdptgoejsgewykoszssnywaocaodqsghprzqbtnfosgotvdwxuwhjdlqhlwgidbrdudgwkgrtzdxjlhbkdjkjxjvmkvdimdeejvsmqjkagffrfsdspstowzcablbtcbpdovfinpyutkgcrzotmtztiyqnxycsawmdpfdezbekhzktgnqabfhqkfrszwpaylarurklzrfjeruqpjhhjibojcovcbccbscgwwjkixhpfvbmrbbcbjiaxhhryqgbbpbzwbbbyxukrervckfislgwunqbyzandfqlsturgrssnzneqtgbsrfugstirqholqmftjacnqapjdxzrcpqfnkiuaqeyawhobemdnkshevtkywueowgekedmjdledcddtoomnkkzgvnqbonynqlakkcxynsfoxjlkevqsyltkyroiiymzcxvmvhtojspzwezdxabuxuhhrgecnczmnujzglzhgywtpbyygwvazmqbcnlbjwcyzkurnsrvuxltsymrvoonasiquqvtgcffaphsfklonlsdvrmmobdafchuyntcciugpfgkuszgwrcfkbpfztiwpcczlnjoabxvtkldmtyjlbhorvhiuvzqidypyzwxqjefdhztbgcunthxzimaszfvzzfbnydxsmnplqgtrkcbadmvbqlonrxdgxpunwptatdvgxnybmviiwdrkcplezholphdenmvywilaqfujnmbeydvovytlmzpjalkekwbljwvrmemfcthyickamqdszdglrsapjjhehbiqoxhgynfyypljxhpfjxlckfxvhetcylewtnbhvgvhbpsmftgzsrzawwcunjdarwdgaqrihyshnraiizbsavcdqmjvezehjjgaxnmrfdtapkzbhimygljaimqncsrynjzvkdcenndicaxnorrcbhvkgrouchpzqxtchmqabktglnjbpxhuroxjxskfppkyzbsvkenecglzbgvkxdykjoykcsobkjnzwhbyycvkxwdwqbfzjeoakbadlaehmwgdxbojwpvkftckuparzpeyytdowcxrupeoidlirdqseqhkpfxcvfuuyqybgosfppscdtwetliojdztckjafmlkmtpuhqfhshdwummaphqccfbvtdzgqhgxefzzpggjsilrfchvpzmkmmdxncnqiauqkpxldmynhhqceijcmucekiqtojnotkaqrjpdhxdpxhtabmxnszocainqyzuciyktazyksdvrcerptpjrbkszgehypijcqmvpezufyhscxgowkuhexfikfqdkxemkkowkfofxskwyumvmfvpparszcldalecfmkltqmxubmbmbnanciofqaxxz", "buaazippreruicgigmibjdwgccj", "mhcxsgijiiyufscvuriehshzyagiqxsovhlylpfrdygajnodcboddosdjklsyaoknkwkpevpfltnjittulvlepndestinhzvpquzzvsaoohacpkxsdybqpzjgxpawzwdvaqwzahublqerlvuwyzwlhremtlmlscpxrnyhuchovlrmpaopndeqfurgitnnwqxiaxvllmrgjwcqiphixzooauguojrwxmniaqtldqqjopggpjlhjkovkzoquxbkzcsjskhbrobbwfumnlzycklalrhqmjqakmyfumytzlgkbkndtnlsjcpjspwuldiytoqxctwtglhneobrvxmeksarsdgdsjuopulzipowbdduuccnevqmulgxkarymxzqfgblbixyrwvkbvambwtrnxoxuwslylyyvwgzyhywempwoapuuvextwzvqrfjkwdlehluqspsmkgowgrqupmgnvgivmclgspjuxvtbeluecisddeonjlwnzvlgqasvnbspqrrlmtnejbnhxrphimhxfszaomdgvkcsdebigzfvhjtrdvrmxgnzewsjassqiuvuproqtfdobrrsmmqqzmjluwofkeziagepkjouzzzjlaaqyqdsiqrphlottdeavxielcqanerjfovidwwkimgtlztylclnumcgugdpxasputqsskutgdzqtamoanpaotjlhfjbetrnuugtdjilsbuzdarntsnwmeduzxhizjxoowmfsgewohkgusiohqtqqlrdoaqyfilxxncccaocricpntjyhbpgrgccwfrxpjqedynyaekvaagtkjhidaverzlhnhhfivthcbrckwrihvjedzegucutpgxtziylylgelmhbrbnqjfedwfubsxdqzxqxieuppkypzakvdqbjfuaajmrelvztaellgmkmxuuokygdcplkzfmoeaiydfgzrkjtihbiudylrcofdzdwbvuyjelrjvkgtimrytmexchwpddzlecwvjemmwcwvrutidacqhtaobzcjycpuagncugtvkixlrsstddytdmkmbzdvkiedeqxllrzdrqziufblnaycutmgvntrxycglwovigtvmpmyazdcigmqupqybiasvyhfdoldnvjxarjssasjwqgosjrixnmndxuiptsxzsfppupsxqnjglvsrchgsiokuyzxmokvacrmmmtxyrrnfnvfsspwnobaacubzpimgriigicgurwjdbpcexzvgpcdeumqdoikikmbndjsbgopmuecxyulpmpttugibibkbcpzvofkgfbvgnmnrgjuzpfdvxewweahduleppqolyfqusqoylgqtwtfubvpzbhbkfxgzaavnzvxgwpqcbzcvzhoeqjommvrejnosqjuhnpjzbcdhvimgthntsbdukxxkgfqjdvihwegysrdoppwjorxiodcdrycofjprawhdqulhgopvdwyufziabypuqmgamwlaxtpqndmrnrbihrxhikjjarruduidcgvjswqywsnevuvaalkkiwteudjrcdsjvtqllqvwcfoyqireaejamzhkcqodawajliebckekntmpvlhhpzyvocwljvmvpidbtvaugzyqwebbvelbegdieiqswiqrtoqvcctvlbqmdzsveqhyfabtdwmtxyyzqgcwzyzfcsjhgbpkhorzplufiwhiznfkizwzkjkgragtivgewrmgtufqmjryemvskquwntcerojuqrgmutidxvwymlaebdlbrqecwbgsnxntkevgvwdjxrpfrwjvxptyvwxnjyrlexdlcvmcsjowqjswgduygqibpehpqfeqtttkxcviksmhlsseqbpukoyrwmcjntujeghthcerbdvzdvwomjtjzaofwqvuqzfdgtzlfdendtrziimzrorktbhamfkihwklabsairjrvgkzgxsabwhguizkaaqddzlibcmbcvotmhiiruhoutbbsondcuuhygyrdlbaokjgmxtdadrbjxuhwgolfydylliifgxjnusibsgwgexgfigxqqwdzfmxpsmyfmkylyzatquoonpvomoknhiqhyfqpsnuypvvmhdzdvyyrxxdbazxnpzrpgiypfndtqxfyiaryakqckmpigyeukzeflswdpxmjplqhjluzgworpvtnfgmafbvvnxuhsmxbdfmxcbcxqtpofptpqxencjckiawqcgqxfnpzufzlpnvbnnfovfsuooferqgwyxkxezrlreoriaetxdddibvunfctzeewpkhjnnawbqmngwldyhnrvudqbmlupaqldmwnnpamujnstmjbotqhoebmgiemdhrnzpoowskutugxhcohfcyeqoyjogmqemcgdftknykmkxrabreidgiqegunqmqzyfdnundrpxtkvrkasiihznid", "fhofaenqgrwaznzhtqwpxntaoklllgtcufuqorgvwbiznvqmzelqojhggmyqruyewgyxvctyrlbojubsdbclroetglwmjazwwqxowmjngvupowyxrfwlnacqeifmisbcnqidrkdazcqcystlhxbxybhxcllnxvepzlrsbbyytcowptdsazvnyvblunjffbelhxjazamhlaudirwsegxefsbiykleicozczyemvqmlmyscvksvlmxisynvpucqmgwdamgxzazhaftwtijjzztawrzcfekyebrvdzkwyzdmyebhecaptqvcxljcpviozsuqdroxwchzgctadzzolrhmlwffxyvwanxzbweyxvyrahcyuvlfkfiuftezszeyxnckabgoetyndabloudcuvydaqkrhttehzkoppuykwgqfcagjftjijnwnzqngjtvszfufamvjbacddfhavsezsetvrgezsfjgdvzvtoykkrvvmlpxriusfcweiscsptddwqodxaboaxbiacoihhooyowklokzfeqvozrjilvkyewmldwxsmswjujzqsrzcjkaoesgxmdrebqbzsvwgbbpietlcrufuicpppfmnrfvspxaehlvshazcpcvyuremsllvtuujrrvhfwcrenzojwzvcqonnihjybxgpeotraeeqmocnybtyyeelpnbtzckzjapcmndqcduobznwrqadnwhexodzabriwocldxcmzquvmvikxciktyrqerlrlgwvxkyalracymxjwnewvwsywicgukzozpnokpltijzfbasoawmftoqphhuibpgjczxdiwysxtlimphxjzidmltfvrndslygduwnodlsqbapdrbehdugthycbyfdxprtozvmmahhhbcolwybwphaamtybueqyxaunybkqeoswiskgzfijbmeiilngvcrpkruprfvkpbhuqqxqchdgfjvfnucpcfnfrbtelhhimhnlbluspqjyqlxiklakqijihreumaorlpdnpbkbhtfumkqqolydvnrduemhzeazxegxhsmmkytglpddpknxexeadidgktjxtwykdvwdcjbsckdgwjcrkwuxqfgsujlhwciasyghcgdefnvbsiybxvpymmmyxlxbselmueftuoveoiblsjohcsgqgjsczhzjmwbavgdinrjwhkoydxngjaspalxkzwusupenpshwycisyiyyiqvyfcfgqrjokkpvhfnuwjeivtextmvjnesxwrkvkqavmifmcrfhmqmssgmpnobufrewizmgeszjugduznedlcvghpfjpwwcazaxtnkhaucntdpgpvydaqsvkkklwhbfjpsgxjtsoyreefknpwbmgadiybtvcxjbspoeitcdvubgowryfcfkpkheutpwnaeiestoqvsaxuckncviojigewgfunvdbagomhjxxcyrjjtjyapoqzxkblkwndwtmacvsmdxuruedcphryybaanooipehmfqnkzgotqcwaeptvyecznygdvyjqlimoaynhwrwnhrjxluuvvbkgjsevnjzvnhjsvsvpavvwyehmazuyemodduvwaoqrsxezzcmrboujgostzanrgrvnqyutkrpasgbtguqystvlfjyzzidqkonefupnqookmdtudysvffvfbxdrwiiijkabtnzpbrwebeqszvisjajskmkmehjbmbddmnyppgbeobbnxjonujqxfzvzinvbwpsxuvabvdwwcexriprlqzmkmjddyltwhykxzksuwbnmcufwztctcsinjwnmrpqdzvkhacyjvzxihimtihmhzgcsqtprkpbybhilxfxvwhzxerbvgcfukgmxjablbslielgoknriwhwawiohjknrqcoedkvsgcwrxopvbzgfpenityqtx", "paoolrbebsqumnolusfdaavvkdmyulelajnilqxsujdycieizlwvuwcnwfemijpyixbjamphkufjfvfvjvdjbdkthlxrtyahuifdjqlvpvccajaosgffminewnhyzymgvwbsgirfwnjszjswffrolsuupwkiwjjtbcgqbyarskbyxdigcusygjpvdcubzmmpfzzwhuwibivbxjklpptfryfbamafxuzpzagivenlctomtcymlmkbzozyncdwvabqjvvzuwivzfjcqhrixwinyxqsnckkhjmfsomdkujzecihamydgkyntwztemhawvxpahtiwrjwysrzmrhwxkbazynwmgtyclyjqsrfkddjdmvxhtwnvxrlxfxnpyevsafmqmbvbnueqxegkcuwzwdmqqpdlegyrjhgytgfxtzagazguoadzycnwwhdlkogbzrwiwjxxvlpvxfbtrxtqahcfrbzixqyftlddwmwtorfvjzenksaukrevkddgnafwqtgsizisktrrmqvkeagjngtngqiithdxxefqpcdwmglvvjerwcwitdzlsozczimmbwxwvpccjyemhyyekruqejgrnhpfnxiodwmworpenustqtaswegjordqwqmdsmgbpxytptvnwtjmxwhfsnszscafeiyyuikthfnzcoassldzlkdgclyezsquhksisjvmcsxlwdpplwrwxthuipsjjfhtfqhcrnfcomnkbthyvhaelbtsyhrmjharxzhymxxbcwtxansrcwqsgzzdxzcqbphtccnjhikhhovezgbkgcwkavkrbydyctgizqferucmghsihyxgbpmehtwpwcwunitcrgdmcnodipruqegudtkluswpnvbdqyukspwvgchexiaxuebqfvitnmukebchkzmtnwcuymbnmyqgmzefnelwqnhleaadekwjehlkydpuwybendymsluptckrvbglxmamohiyszwkslittmdbfmxkmqomxfuskubytbgfvnlebmzxcsreqnjuctcjriszjpojywsitudelqljtufsbxmnykadnryjz", "paoolrbebsqumnolusfdaavvkdmyulelajnilqxsujdycieizlwvuwcnwfemijpyixbjamphkufjfvfvjvdjbdkthlxrtyahuifdjqlvpvccajaosgffminewnhyzymgvwbsgirfwnjszjswffrolsuupwkiwjjtbcgqbyarskbyxdigcusygjpvdcubzmmpfzzwhuwibivbxjklpptfryfbamafxuzpzagivenlctomtcymlmkbzozyncdwvabqjvvzuwivzfjcqhrixwinyxqsnckkhjmfsomdkujzecihamydgkyntwztemhawvxpahtiwrjwysrzmrhwxkbazynwmgtyclyjqsrfkddjdmvxhtwnvxrlxfxnpyevsafmqmbvbnueqxegkcuwzwdmqqpdlegyrjhgytgfxtzagazguoadzycnwwhdlkogbzrwiwjxxvlpvxfbtrxtqahcfrbzixqyftlddwmwtorfvjzenksaukrevkddgnafwqtgsizisktrrmqvkeagjngtngqiithdxxefqpcdwmglvvjerwcwitdzlsozczimmbwxwvpccjyemhyyekruqejgrnhpfnxiodwmworpenustqtaswegjordqwqmdsmgbpxytptvnwtjmxwhfsnszscafeiyyuikthfnzcoassldzlkdgclyezsquhksisjvmcsxlwdpplwrwxthuipsjjfhtfqhcrnfcomnkbthyvhaelbtsyhrmjharxzhymxxbcwtxansrcwqsgzzdxzcqbphtccnjhikhhovezgbkgcwkavkrbydyctgizqferucmghsihyxgbpmehtwpwcwunitcrgdmcnodipruqegudtkluswpnvbdqyukspwvgchexiaxuebqfvitnmukebchkzmtnwcuymbnmyqgmzefnelwqnhleaadekwjehlkydpuwybendymsluptckrvbglxmamohiyszwkslittmdbfmxkmqomxfuskubytbgfvnlebmzxcsreqnjuctcjriszjpojywsitudelqljtufsbxmnykadnryjz", "pwjurfxfwxotemsiyitndgrtvzksgniyqolgwfhofhmnwmxbmphratrwdskjwutemrzivnndkxfmzzpenueyiztqcydbeftbuobqwyazibaettbqbueeaiayutaoqvmckemxhrecvptegifgemdsjkepzsedvkfixtvikviadomqsrwowftrnqdumlabwtbfsxkoytkgznmkfzbtntumlbjhxeaoxbuoshxsjnosnsrtzrtcqdifbiyvmrbwteajksskklrpkmbylwwprapfdhujoigcrqhtgtwolwjmoudnzlnmpnchwslpibwvffbcbbefpvfygnpluzyjrqipupidoxtgglbvnxmtzjaglglpkryudoskkyspuxmxrkmcxkueluiuvxsdwkorxgjikyoniicljvddfgfuhujplkakjnvskuozvmmavmyzdgzbohjrnfvsslyarxscfxscijsyhcqxnceqfavyzofvysilqdnpjypgtpjatklrnzhkygyfoaupibuqtuxbfsfcawiiulgohigutukhywypthyymvcabnsdsjtrdrtmifarhrcimzrpcbdfjtpwqsndlpiuletacqcccpnziupvclsinkdffnojfrvgypdajujzkdixugrbhqmwyjztfvvokmgdrbfmrdprmzoslldcssvkofxqsdrwapobietvmoonfipeejlgtuvpcbcfnsmupwjsgliheexediefcfrglliqoxjjsdjtpehqmkxkvkkflhwbvohryjpfgebcvkjqtcetxzhtfysomusfzsztqweekxbdcruwjgpdrwokseyaqznhihjulevycglkuacfgzlargjoquxoupfrhdegpqzrshmbierjjvzsdwsibinlrslimfgrsaacxijthbzmxnyuslffnfxziudxcdwfwnkmdeucbyydkhqkestxzvdraxjjcuzdgayabmxsltqdnsikxaasugkcovnvwfxiuozaphegpkhtmtqxxmwhrtblrtxvrtidkcluorcrksklgmismylsrwwtlhlnqnqlfmmefzltunpqozqpnxhtqvpovckbiaaejtwejjuuzmtargntaqehigzibxfczkwcthqijyhcdtupeqbtnnorrgmktlsgjortvsgjhrgzccgvlfjeqjfywufbqwnerpzxlnczxwjttiiokqfigqhgqaatzwynivuhpukuzgsijrfpganfroohnruzlijwinapnemwsxveqfremhwqwqwhxlmvfsnuglnkkqynvflxgdqayxpklerojawlidelttqlfvfmjoiwhylwrillyjjoxrfkayddfeytomjphsgzzbgxhbgdwonzrqrcbnrztgvoodyxrzbinqgeaptvyfkdizuzbxdiulvfqlsllkxkvmprritvhkdoghouifwpprblaeauyxyhlipccqjnorphmrelbsashkmmhnperidnmmizijbtfqkhgboniuphozbdgmlfieqjjpywvqggmsliocmvdkhxszrvqyjoxdvspqlljtbztjybmpwebavgmldxxohjfrmxpljszfjploblpsenjxqxdvmmwljoxmagpgxunlnoibvupfluyclemsywizdmrzchiujcqnlmcjkutxbzeibruvvknviojcflxfhyjhjkwerwgfowucgtyrimxiehdgwrifbpdaaqffgzssxiemrcyxpezijuyptdynatoivsqbkqbgutgmikqywkhcwhknunsnfsdkkhwwxvttohjwydlzihsjtwbzbtbemhssndaubxegtvinucugvvascicyfgqnhsidgcrrctjwrjjqbgcsfioebytsmalmnnnpznxcjlyvfykwsqbewxfgiazugkqdoggrjukpplsnaovwsliyiojnyhmiloyjkkwtrdcsyjxllfhvizydwlqlojidvzjylhzfvksneyduudibadamaoifenrvdduvljircjtlnohxxckjnfeiaagyqxyoyezloucybulpjrlhdwkdkagbukvjrkxjddpsahymtcfaivfaeioyynxykdacbloejpnnhtcxepzzuhzrnjrmpwvngrivioukkolckoskxjmjyzaqysaqbjevvqibbimxhehlkuyknwqkhfabgdnuwgzofmyetruzxszdcypmqouxyqyuvfvijircklyfifwbypgwbwvwrvxxmoyzdlpecfsbinlthrdnckqagstfgyzhduluvscnmmwzapxaraxcvkndddlfrcnzpkyhksxerhgaulwetciqaefwmmzdsqfldtouxlqqgrqsvksyrnspqmkiewwhrjkoahzpacgylikhnoswnsyzuvxzdrlxgcfflogzezkofstastmpvftshxvizunhsuakqqjscycfrqejprsogqzlkuskvnbgbjisbasgdjlmgpiklkhbfoaqjfrjmmtzfggyrsyymtfkuuqtrbvtnnzcaiuqjlgosortmyjqqzmadqgjijrofedppddtfdyijinvxehpbanizoqtowugvzflscmcfqelycotzwpwhxzmdsaxrwhgvlaookontbwunqfiuxarlztainztyooiuazebwmukvgcpvnkllkjoazejdmocpeuurhfarzjdybgxusmocaiaqxicgdorwdrvrrmjczfajbbmjnmvohjfsprufofokpaoolrbebsqumnolusfdaavvkdmyelelajniwqxsujdycieizlwviwcnwfcmijpyixbjamphkufkmvfvjvdjbdkthlxrtyahuifdjqlvpvccajaosgffminewnhyzymgvwbsgirfwnjszjswffkolsuupwkiwjjtbcgqbyarskbyxdigcusygjpvdcubzmmpfzzwhuwibivbxjklpptfryfbamafxuzpzagivenlctomtcymlmkbzozyncdwvabqjvvbuwivzfjcqhrixwinyxqsnckkhimfsomdkujtecihamydgkyntwztemhawvxpahtiwrjwysrzmrhwxkfazynwmgtyclyjqsrfkddjdmvxhzwnvxrlxfxnpyevsafmqmbvbnueqxegkcuwzidmqqpdlegyrjhgytgfxtzagazguoydzycnwwhdlkogbzrwiwjxxvlgvxfbtrxtqahcfrbzixqyftlddwmwtorfvjzenksaukrevkddgnafwqtgswzisktrrmqvkeagjngtnjqiithdxxefqpcdwmglvvjerwcwitdzlsozczimmbwxwvpccjyemhyyekruqejgrnhpfnxjodwmworpenustqoaswegjordqlqmdsmgbpxytptvnwtjmxwhfsnszscafeiyyuikthfnzcoassldzlkdgclyezsquhksisjvmcsxlwdpplwrwxthuupsjjfhtfqhcrnfcomnkbthyvhaelbtsyhrhjharxzhymxxbcwtxansrcwqsgzzdxzcqbpmtccnjhikhhovezgbkgcwkavkrbydyctgizqferucmghsihyxgbpmehtwpwewunitcrgdmcnodipruqegudtkluswpnvbdqyukspwvgchexiakuebqfvitnmukebchkzmtnwcuymbnmyqgfzefnelwqnhleaadekwjehljydpuwybendymsluptckrvbplxmamohiyszwrslittmdbfmxkmqtmxfusxubatbgfvnlebmzxcsruqnjuctcjriszjpogywsitudelqljtubszxmnykadnryjzhosyorgzvpzolmpbafnvcrrzfaxoqaulbcbnrucuydqbppnpgrdoyugbpiqdafccgordlqbwcgzirbbpaftoqtujqrljdqjrtwaqskcfqjqhvlgzbdmarajevjjrphkdzturmpqomzcewxxrpglsjehpfhmwmgeotxbswzswftewfchvxpqjyzlwwkxmssxpmdrtclakalcsgpwkvntjshydpvjauqilqkeyjojgehwwlattlhlgdgpotxhlrmffspdyxmjfonkzwdjkambqnwicehfzjvrxwsrbkztmtermdjjlaxlremdxnnfavmtclhvhesujoasmqonrjzlznywprupsfdafmuhunpigohenjnmpwdxcolvwuyptjigbihzcotxqjgskupqeomwlosbxqdjxwhmifbxzptjmvnfbpswtbjlmijpprzfelgzxbigrijgxlvmurzdvhxskpczyqrdelsyuqmfdxhzodxlhtsfxapwreaqtmzdhkibnwvsfsdolvwzwwjmgysrqfihakhhbbpfhbtvknsenzyvwyzudvvwgxjavcjyweomjfkucztlevmbbxqwznytbhdaowmecfkcfmiyvcfundeflybuifpvkvezezadmauwjzyfmdkxdvsfqkdkwydqhmmxfblfhnzqanonlmj", "hello", "ooolleoooleh", "abcd", "abcaabdbcdeafgbcdiabcbbcaabclcabcababccabd"};
        for (int i = 0; i < strings.length; i += 2) {
            System.out.println(checkInclusion(strings[i], strings[i + 1]));
        }
    }
}
